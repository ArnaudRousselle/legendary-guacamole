/* tslint:disable */
/* eslint-disable */
/**
 * LegendaryGuacamole.WebApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ShortDate } from './ShortDate';
import {
    ShortDateFromJSON,
    ShortDateFromJSONTyped,
    ShortDateToJSON,
} from './ShortDate';

/**
 * 
 * @export
 * @interface AddBillingInput
 */
export interface AddBillingInput {
    /**
     * 
     * @type {ShortDate}
     * @memberof AddBillingInput
     */
    valuationDate: ShortDate;
    /**
     * 
     * @type {string}
     * @memberof AddBillingInput
     */
    title: string;
    /**
     * 
     * @type {number}
     * @memberof AddBillingInput
     */
    amount: number;
    /**
     * 
     * @type {boolean}
     * @memberof AddBillingInput
     */
    checked: boolean;
    /**
     * 
     * @type {string}
     * @memberof AddBillingInput
     */
    comment?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof AddBillingInput
     */
    isArchived: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AddBillingInput
     */
    isSaving: boolean;
}

/**
 * Check if a given object implements the AddBillingInput interface.
 */
export function instanceOfAddBillingInput(value: object): value is AddBillingInput {
    if (!('valuationDate' in value) || value['valuationDate'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('checked' in value) || value['checked'] === undefined) return false;
    if (!('isArchived' in value) || value['isArchived'] === undefined) return false;
    if (!('isSaving' in value) || value['isSaving'] === undefined) return false;
    return true;
}

export function AddBillingInputFromJSON(json: any): AddBillingInput {
    return AddBillingInputFromJSONTyped(json, false);
}

export function AddBillingInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddBillingInput {
    if (json == null) {
        return json;
    }
    return {
        
        'valuationDate': ShortDateFromJSON(json['valuationDate']),
        'title': json['title'],
        'amount': json['amount'],
        'checked': json['checked'],
        'comment': json['comment'] == null ? undefined : json['comment'],
        'isArchived': json['isArchived'],
        'isSaving': json['isSaving'],
    };
}

export function AddBillingInputToJSON(value?: AddBillingInput | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'valuationDate': ShortDateToJSON(value['valuationDate']),
        'title': value['title'],
        'amount': value['amount'],
        'checked': value['checked'],
        'comment': value['comment'],
        'isArchived': value['isArchived'],
        'isSaving': value['isSaving'],
    };
}

